<!DOCTYPE html>
<html lang="en">
    <head>
        <%- include('./partials/head'); %>
    </head>
    <body class="edit-page">
        <%- include('./partials/nav'); %>
    
        <div class="edit-container">
            <form class="edit-form" action="/edit-guide/<%= guide._id %>" method="POST" enctype="multipart/form-data">
                <div class="edit-main">
                    <h2>Edit Guide</h2>
                    <div class="edit-input-group">
                        <label for="Tittel">Title</label>
                        <input type="text" name="Tittel" value="<%= guide.tittel %>" required />
                    </div>
                    <div class="edit-input-group">
                        <label for="Tag">Tag</label>
                        <input type="text" name="Tag" value="<%= guide.tag.join(', ') %>" />
                    </div>
                </div>
        
                <% if (guide && guide.overskrift && Array.isArray(guide.overskrift) && guide.overskrift.length) { %>
                    <% guide.overskrift.forEach((overskrift, index) => { %>
                        <div class="edit-section" id="section-<%= index %>">
                            <h3>Section <%= index + 1 %></h3>
                            
                            <div class="edit-input-group">
                                <label for="Overskrift<%= index %>">Overskrift</label>
                                <input type="text" name="Overskrift[]" value="<%= overskrift %>" required>
                            </div>
                    
                            <div class="edit-input-group">
                                <label for="Beskrivelse<%= index %>">Beskrivelse</label>
                                <textarea name="Beskrivelse[]" required><%= guide.beskrivelse[index] %></textarea>
                            </div>
                    
                            <input type="hidden" name="existingImages[]" value="<%= guide.bilde[index] %>">
                            <input type="hidden" name="deletedImages[]" value="" class="deletedImageInput">
                    
                            <div class="edit-input-group">
                                <label for="photo<%= index %>">Bilde</label>
                                <div class="edit-file-input-container">
                                    <input type="file" name="photo<%= index %>" accept="image/*" class="edit-file-input" id="photo<%= index %>" onchange="updateLabel(this)">
                                    <label for="photo<%= index %>" class="edit-file-label <% if (guide.bilde[index]) { %> selected <% } %>">
                                        <% if (guide.bilde[index]) { %>
                                            <span>File Selected: <%= guide.bilde[index] %></span>
                                        <% } else { %>
                                            <span>Select File</span>
                                        <% } %>
                                    </label>
                                </div>
                            </div>
                            <button type="button" class="edit-delete-section" data-index="<%= index %>">Delete Section</button>
                        </div>
                    <% }); %>
                <% } %>
        
                <div id="newSections"></div>
        
                <div class="edit-actions">
                    <button type="button" class="edit-add-section" id="addSection">Add New Section</button>
                    <button type="submit" class="edit-save-changes">Save Changes</button>
                </div>
            </form>
        </div>
    
        <script>
            function updateLabel(input) {
                const label = input.nextElementSibling; // Get the associated label
                if (input.files.length > 0) {
                    label.classList.add('selected');
                    label.innerHTML = `<span>File Selected: ${input.files[0].name}</span>`;
                } else {
                    label.classList.remove('selected');
                    label.innerHTML = `<span>Select File</span>`;
                }
            }
    
            document.getElementById('addSection').addEventListener('click', function() {
    const newSections = document.getElementById('newSections');
    const sectionCount = document.querySelectorAll('.edit-section').length;

    const newSection = document.createElement('div');
    newSection.className = 'edit-section';
    newSection.id = `section-${sectionCount}`;
    newSection.innerHTML = `
    <h3>New Section</h3>
    <div class="edit-input-group">
        <label for="Overskrift${sectionCount}">Overskrift</label>
        <input type="text" name="Overskrift[]" id="Overskrift${sectionCount}" required>
    </div>
    <div class="edit-input-group">
        <label for="Beskrivelse${sectionCount}">Beskrivelse</label>
        <textarea name="Beskrivelse[]" id="Beskrivelse${sectionCount}" rows="4" required></textarea>
    </div>
    <div class="edit-input-group">
        <label for="photo${sectionCount}">Bilde</label>
        <div class="edit-file-input-container">
            <input type="file" name="newPhoto${sectionCount}" accept="image/*" class="edit-file-input" id="photo${sectionCount}" onchange="updateLabel(this)">
            <label for="photo${sectionCount}" class="edit-file-label"><span>Select File</span></label>
        </div>
    </div>
    <button type="button" class="edit-delete-section" data-index="${sectionCount}">Delete Section</button>
    `;
    newSections.appendChild(newSection);
});


    
             // Modified event listener for delete buttons
            document.addEventListener('click', function(event) {
                if (event.target.classList.contains('deleteSection')) {
                    const sectionIndex = event.target.getAttribute('data-index');
                    const sectionToDelete = document.getElementById(`section-${sectionIndex}`);
                    if (sectionToDelete && confirm('Are you sure you want to delete this section?')) {
                        // Mark all inputs in this section as deleted
                        const inputs = sectionToDelete.querySelectorAll('input, textarea');
                        inputs.forEach(input => {
                            input.name = `deleted_${input.name}`;
                        });

                        // Mark the image for deletion
                        const deletedImageInput = sectionToDelete.querySelector('.deletedImageInput');
                        const existingImageInput = sectionToDelete.querySelector('input[name^="existingImages"]');
                        if (existingImageInput) {
                            deletedImageInput.value = existingImageInput.value;
                        }

                        // Hide the section
                        sectionToDelete.style.display = 'none';
                    }
                }
            });
        </script>
    
    </body>
</html>
